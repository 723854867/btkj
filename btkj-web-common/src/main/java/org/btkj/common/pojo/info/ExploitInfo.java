package org.btkj.common.pojo.info;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.btkj.statistics.pojo.model.Exploit;

/**
 * 业绩
 * 
 * @author ahab
 */
public class ExploitInfo implements Serializable {

	private static final long serialVersionUID = 8133198208994280881L;

	private int orderNum;
	private Map<Integer, Double> timeBasedExploit;
	private Map<Integer, Double> typeBasedExploit;
	
	public ExploitInfo() {}
	
	public ExploitInfo(int orderNum, List<Exploit> exploits) {
		this.orderNum = orderNum;
		if (null != exploits) {
			timeBasedExploit = new HashMap<Integer, Double>();
			typeBasedExploit = new HashMap<Integer, Double>();
			for (Exploit exploit : exploits) {
				double val1 = timeBasedExploit.containsKey(exploit.getTime()) ? timeBasedExploit.get(exploit.getTime()) + exploit.getQuota() : exploit.getQuota();
				double val2 = typeBasedExploit.containsKey(exploit.getType()) ? typeBasedExploit.get(exploit.getType()) + exploit.getQuota() : exploit.getQuota();
				timeBasedExploit.put(exploit.getTime(), val1);
				typeBasedExploit.put(exploit.getType(), val2);
			}
		}
	}
	
	public int getOrderNum() {
		return orderNum;
	}
	
	public void setOrderNum(int orderNum) {
		this.orderNum = orderNum;
	}
	
	public Map<Integer, Double> getTimeBasedExploit() {
		return timeBasedExploit;
	}
	
	public void setTimeBasedExploit(Map<Integer, Double> timeBasedExploit) {
		this.timeBasedExploit = timeBasedExploit;
	}
	
	public Map<Integer, Double> getTypeBasedExploit() {
		return typeBasedExploit;
	}
	
	public void setTypeBasedExploit(Map<Integer, Double> typeBasedExploit) {
		this.typeBasedExploit = typeBasedExploit;
	}
}
