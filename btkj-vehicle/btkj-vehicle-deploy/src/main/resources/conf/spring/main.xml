<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
        				http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="org.btkj.vehicle" />
	
	<bean class="org.rapid.util.common.SpringContextUtil" />

	<bean id="httpProxy" class="org.rapid.util.net.http.HttpProxy" init-method="init">
		<property name="syncHttp">
			<bean class="org.rapid.util.net.http.SyncHttpAdapter">
				<property name="retryCount" value="${http.sync.retryCount}"/>
				<property name="keepAliveTime" value="${http.sync.keepAliveTime}"/>
				<property name="maxConn" value="${http.sync.maxConn}"/>
				<property name="sslEnabled" value="${http.sync.sslEnabled}"/>
				<property name="maxConnPerRoute" value="${http.sync.maxConnPerRoute}"/>
			</bean>
		</property>
	</bean>
	
	<bean class="org.btkj.pojo.config.GlobalConfigContainer" init-method="init">
		<property name="zkClient">
			<bean class="org.I0Itec.zkclient.ZkClient">
				<constructor-arg name="zkServers" value="${zk.servers}" />
				<constructor-arg name="sessionTimeout" value="${zk.session.timeout}" />
				<constructor-arg name="connectionTimeout" value="${zk.connection.timeout}" />
				<constructor-arg name="zkSerializer" >
					<bean class="org.I0Itec.zkclient.serialize.BytesPushThroughSerializer" />
				</constructor-arg>
			</bean>
		</property>
		<property name="configPath" value="${zk.config.path}" />
	</bean>
	
	<bean id="executorService" class="org.rapid.util.concurrent.ExecutorService" init-method="init">
		<property name="minPoolSize" value="${executor.minPoolSize}" />
		<property name="maxPoolSize" value="${executor.maxPoolSize}" />
		<property name="keepAliveTime" value="${executor.keepAliveTime}" />
		<property name="queueCapacity" value="${executor.queueCapacity}" />
		<property name="allowCoreThreadTimeOut" value="${executor.allowCoreThreadTimeOut}" />
		<property name="rejectedHandler">
			<bean class="org.btkj.vehicle.LeBaoBaTaskRejectedHandler" />
		</property>
	</bean>
	
	<bean id="tenantInsurerMapper" class="org.btkj.vehicle.redis.TenantInsurerMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="tenantInsurerDao" />
		<property name="configService" ref="configService"/>
	</bean>
	
	<bean id="vehicleCoefficientMapper" class="org.btkj.vehicle.redis.VehicleCoefficientMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="vehicleCoefficientDao" />
	</bean>
	
	<bean id="vehicleBrandMapper" class="org.btkj.vehicle.redis.VehicleBrandMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="vehicleBrandDao" />
	</bean>
	
	<bean id="vehicleDeptMapper" class="org.btkj.vehicle.redis.VehicleDeptMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="vehicleDeptDao" />
	</bean>
	
	<bean id="vehicleModelMapper" class="org.btkj.vehicle.redis.VehicleModelMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="vehicleModelDao" />
	</bean>
	
	<bean id="bonusManageConfigMapper" class="org.btkj.vehicle.redis.BonusManageConfigMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="bonusManageConfigDao" />
	</bean>
	
	<bean id="bonusScaleConfigMapper" class="org.btkj.vehicle.redis.BonusScaleConfigMapper">
		<property name="redis" ref="redis" />
		<property name="dao" ref="bonusScaleConfigDao" />
	</bean>
</beans>